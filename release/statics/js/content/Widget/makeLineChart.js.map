{"version":3,"sources":["../../../../src/js/content/Widget/makeLineChart.js"],"names":["define","format","ts","n","toString","length","generate","data","opts","res","forEach","i","x","arr","Data","d","push","Timestamp","Value","sensor","SensorId","type","name","color","tooltip","valueDecimals","make","container","text","Highcharts","stockChart","title","align","style","fontSize","rangeSelector","exporting","credits","chart","zoomType","series"],"mappings":"AAAAA,OAAO,YAAM;AACZ,UAASC,MAAT,CAAgBC,EAAhB,EAAoB;AACnB,MAAIC,UAAJ;AACA,UAAQD,GAAGE,QAAH,GAAcC,MAAtB;AACC,QAAK,EAAL;AAASF,QAAID,KAAK,IAAT,CAAe;AACxB,QAAK,EAAL;AAASC,QAAID,KAAK,IAAT,CAAe;AACxB,QAAK,EAAL;AAASC,QAAID,EAAJ,CAAe;AAHzB;AAKA,SAAOC,CAAP;AACA;AACD,UAASG,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC7B,MAAIC,MAAM,EAAV;AACAF,OAAKG,OAAL,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,OAAMC,MAAMF,EAAEG,IAAd;AACA,OAAIC,IAAI,EAAR;AACA,OAAIF,IAAIR,MAAR,EAAgB;AACfQ,QAAIH,OAAJ,CAAY,aAAK;AAChBK,OAAEC,IAAF,CAAQ,CAACf,OAAOU,EAAEM,SAAT,CAAD,EAAsBN,EAAEO,KAAxB,CAAR;AACA,KAFD;AAGA;AACD,OAAMC,SAASX,KAAKG,EAAES,QAAP,CAAf;AACAX,OAAIO,IAAJ,CAAS;AACRK,UAAM,MADE;AAERC,UAAMH,OAAOG,IAFL;AAGRC,WAAO,MAAKJ,OAAOI,KAHX;AAIRhB,UAAMQ,CAJE;AAKRS,aAAS;AACRC,oBAAe;AADP;AALD,IAAT;AASA,GAlBD;AAmBA,SAAOhB,GAAP;AACA;AACD,UAASiB,IAAT,CAAcC,SAAd,EAAyBpB,IAAzB,EAA+BC,IAA/B,EAAqCoB,IAArC,EAA2C;AAC1C,SAAOC,WAAWC,UAAX,CAAsBH,UAAU,CAAV,CAAtB,EAAoC;AAC1CI,UAAO;AACNC,WAAO,MADD;AAENJ,UAAMA,IAFA;AAGNK,WAAO;AACNV,YAAO,SADD;AAENW,eAAU;AAFJ;AAHD,IADmC;AAS1CC,kBAAe,KAT2B;AAU1CC,cAAW,KAV+B;AAW1CC,YAAS,KAXiC;AAY1CC,UAAO;AACNC,cAAU;AADJ,IAZmC;AAe1CC,WAAQlC,SAASC,IAAT,EAAeC,IAAf;AAfkC,GAApC,CAAP;AAiBA;;AAED,QAAOkB,IAAP;AACA,CAtDD","file":"makeLineChart.js","sourcesContent":["define(() => {\r\n\tfunction format(ts) {\r\n\t\tlet n;\r\n\t\tswitch (ts.toString().length) {\r\n\t\t\tcase 10: n = ts * 1000; break;\r\n\t\t\tcase 16: n = ts / 1000; break;\r\n\t\t\tcase 13: n = ts;        break;\r\n\t\t}\r\n\t\treturn n;\r\n\t}\r\n\tfunction generate(data, opts) {\r\n\t\tlet res = [];\r\n\t\tdata.forEach((i, x) => {\r\n\t\t\tconst arr = i.Data;\r\n\t\t\tlet d = [];\r\n\t\t\tif (arr.length) {\r\n\t\t\t\tarr.forEach(i => {\r\n\t\t\t\t\td.push( [format(i.Timestamp), i.Value] );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tconst sensor = opts[i.SensorId];\r\n\t\t\tres.push({\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: sensor.name,\r\n\t\t\t\tcolor: \"#\"+ sensor.color,\r\n\t\t\t\tdata: d,\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tvalueDecimals: 2\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tfunction make(container, data, opts, text) {\r\n\t\treturn Highcharts.stockChart(container[0], {\r\n\t\t\ttitle: {\r\n\t\t\t\talign: \"left\",\r\n\t\t\t\ttext: text,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tcolor: \"#717171\",\r\n\t\t\t\t\tfontSize: \"14px\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trangeSelector: false,\r\n\t\t\texporting: false,\r\n\t\t\tcredits: false,\r\n\t\t\tchart: {\r\n\t\t\t\tzoomType: \"x\"\r\n\t\t\t},\r\n\t\t\tseries: generate(data, opts)\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn make;\r\n});"]}