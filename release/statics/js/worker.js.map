{"version":3,"sources":["../../../src/js/worker.js"],"names":["self","onmessage","d","e","data","res","action","buildLineSeries","rawData","buildBarSeries","statKpis","buildTableData","postMessage","reqId","result","o","viols","kpis_data","forEach","KPI","violation","total_link_count","total_links_count","total_violation","total_packet_losss_ne_violation","total_two_way_delay_max_violation","total_two_way_dv_max_violation","arr","name","i","push","id","filter","v","ratio","len1","len2","itm1","itm2","tmp","j","k","res2","length","SensorId","Data","format","Timestamp","Value","ts","n","toString"],"mappings":"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","file":"worker.js","sourcesContent":["self.onmessage = e => {\r\n\tvar d = e.data;\r\n\tvar res;\r\n\tswitch (d.action) {\r\n\t\tcase \"line_chart\":\r\n\t\tres = buildLineSeries(d.rawData); break;\r\n\t\t\r\n\t\tcase \"bar_chart\":\r\n\t\tres = buildBarSeries(d.rawData, d.statKpis); break;\r\n\t\t\r\n\t\tcase \"table\":\r\n\t\tres = buildTableData(d.rawData, d.statKpis); break;\r\n\t}\r\n\tself.postMessage({\r\n\t\treqId: d.reqId,\r\n\t\tresult: res\r\n\t});\r\n};\r\n\r\nfunction buildTableData(data) {\r\n\tvar o = data;\r\n\tvar viols = {};\r\n\t\r\n\to.kpis_data.forEach(o => {\r\n\t\tviols[o.KPI] = o.violation;\r\n\t});\r\n\tvar result = {\r\n\t\ttotal_link_count:                  o.total_links_count,\r\n\t\ttotal_violation:                   o.total_violation,\r\n\t\ttotal_packet_losss_ne_violation:   viols[\"packet_loss_ne\"],\r\n\t\ttotal_two_way_delay_max_violation: viols[\"two_way_delay_max\"],\r\n\t\ttotal_two_way_dv_max_violation:    viols[\"two_way_dv_max\"]\r\n\t};\r\n\t\r\n\treturn result;\r\n}\r\n\r\nfunction buildBarSeries(data, statKpis) {\r\n\tvar arr = data;\r\n\tvar result = [];\r\n\tarr.forEach(i => {\r\n\t\tlet name = i.KPI;\r\n\t\tresult.push({\r\n\t\t\tid: statKpis.filter(v => {return v.name = name})[0].id,\r\n\t\t\tname: name,\r\n\t\t\tdata: [i.ratio]\r\n\t\t});\r\n\t});\r\n\treturn result;\r\n}\r\n\r\nfunction buildLineSeries(data) {\r\n\tvar arr = data,\r\n\t\tlen1, len2, itm1, itm2, tmp, i, j,\r\n\t\tresult = {},\r\n\t\tk, res2;\r\n\t\r\n\tlen1 = arr.length;\r\n\tfor (i=0; i < len1; i+=1) {\r\n\t\titm1 = arr[i];\r\n\t\tk = itm1.SensorId;\r\n\t\tresult[k] = [];\r\n\t\tres2 = result[k];\r\n\t\ttmp = itm1.Data;\r\n\t\t\r\n\t\tif (tmp) {\r\n\t\t\tlen2 = tmp.length;\r\n\t\t\t\r\n\t\t\t/* for (j=0; j < len2; j+=1) { // 5000\r\n\t\t\t\titm2 = tmp[j];\r\n\t\t\t\tres2.push( [format(itm2.Timestamp), itm2.Value] );\r\n\t\t\t} */\r\n\t\t\tfor (j=len2-1; j >= 0; j-=1) { // 3000\r\n\t\t\t\titm2 = tmp[j];\r\n\t\t\t\tres2.push( [format(itm2.Timestamp), itm2.Value] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction format(ts) {\r\n\tvar n;\r\n\tswitch (ts.toString().length) {\r\n\t\tcase 10: n = ts * 1000; break;\r\n\t\tcase 16: n = ts / 1000; break;\r\n\t\tcase 13: n = ts;        break;\r\n\t}\r\n\treturn n;\r\n}"]}